---
alexa_media:
  accounts:
    - email: !secret amazon_email
      password: !secret amazon_password
      url: amazon.de
notify:
  - platform: alexa_media
    name: alexa_media
#####################################################################
### UI Controller for TTS
#####################################################################
input_text:
  alexa_tts:
    name: Alexa TTS
    initial: Hallo
input_number:
  alexa_volume:
    name: Alexa Volume
    initial: 4
    min: 1
    max: 10
    step: 1
input_select:
  alexa:
    name: Alexa
    options:
      - Oben
      - Schlafzimmer
      - Arbeitszimmer
      - Bad
      - None
    initial: None
    icon: mdi:amazon-alexa
sensor:
  - platform: template
    sensors:
      last_alexa:
        entity_id:
          - media_player.kevin_s_echo_dot_unten
          - media_player.kevins_echo_dot_oben
          - media_player.kevins_echo_dot
          - media_player.kevins_echo
        value_template: >
          {{ states.media_player | selectattr('attributes.last_called','eq',True) |
          map(attribute='entity_id') | first }}
#####################################################################
### Input Select
#####################################################################
automation:
  - id: fd41d92b-1aec-43d9-ab57-17311fbf5191 
    alias: Alexa TTS
    description: Announce what is typed as input
    mode: queued
    trigger:
      platform: state
      entity_id: input_select.alexa
    action:
      - service: media_player.volume_set
        data_template:
          entity_id: >
            {% if is_state('input_select.alexa', 'Oben') %}
              media_player.kevins_echo_dot_oben
            {% elif is_state('input_select.alexa', 'Schlafzimmer') %}
              media_player.kevin_s_echo_dot_unten
            {% elif is_state('input_select.alexa', 'Arbeitszimmer') %}
              media_player.kevins_echo_dot
            {% elif is_state('input_select.alexa', 'Bad') %}
              media_player.kevins_echo
            {% elif is_state('input_select.alexa', 'None') %}
              false
            {% endif %}
          volume_level: '{{ states.input_number.alexa_volume.state | float /10 }}'
      - service: notify.alexa_media
        data_template:
          target:
            - >-
              {% if is_state('input_select.alexa', 'Oben') %}
                media_player.kevins_echo_dot_oben
              {% elif is_state('input_select.alexa', 'Schlafzimmer') %}
                media_player.kevin_s_echo_dot_unten
              {% elif is_state('input_select.alexa', 'Arbeitszimmer') %}
                media_player.kevins_echo_dot
              {% elif is_state('input_select.alexa', 'Bad') %}
                media_player.kevins_echo
              {% endif %}
          data:
            type: announce
            method: speak
          message: "{{  states.input_text.alexa_tts.state }}"
      - delay: '00:00:02'
      - service: input_select.select_option
        data:
          entity_id: input_select.alexa
          option: None
  - id: 0857d9ec-4c7b-4a0a-aeaf-e5e8300cf8ff
    description: Sende eine Nachricht wenn alexa_media neu authentifiziert werden muss
    mode: single
    alias: send_notification_if_alexa_login_timed_out
    trigger:
      platform: event
      event_type: alexa_media_player/relogin_required
    action:
      - service: notify.kevin
        data:
          message: "Alexa_Media Login Timed Out"
  - id: 0cdc8f40-8de1-499f-ad30-733c04d8f728
    alias: 'Alexa Ansagen aus wenn wir schlafen'
    description: Keine lauten Ansagen auf Alexa Lautsprechern wenn der Schlafmodus an ist
    mode: single
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: input_boolean.sleepmode
        from: "off"
        to: "on"
    action:
      - service: homeassistant.turn_off
        entity_id: input_boolean.notifier_alexa
  - id: ea44693e-9d17-4538-9477-1074afd66cc4
    alias: 'Alexa Ansagen an wenn wir aufstehen'
    description: Schalte Ansagen auf Alexa Lautsprechern wieder an wenn wir aufstehen
    mode: single
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: input_boolean.sleepmode
        from: "on"
        to: "off"
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.notifier_alexa

#####################################################################
### Virtual Light / Alexa Sequences
#####################################################################
light:
  - platform: template
    lights:
      alexa_virtual:
        friendly_name: "Alexa Dummy Light"
        turn_on:
        turn_off:
        set_level:

cloud:
  alexa:
    filter:
      include_entities:
        - light.alexa_virtual
    entity_config:
      light.alexa_virtual:
        name: Sequence Trigger
        description: Virtual Light / Alexa Sequences
        display_categories: LIGHT

homeassistant:
  customize:
    input_text.alexa_tts:
      icon: mdi:textbox
    input_select.alexa:
      icon: mdi:format-list-bulleted
    input_number.alexa_volume:
      icon: mdi:volume-high
